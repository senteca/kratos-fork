// Code generated by go-swagger; DO NOT EDIT.

package common

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ory/kratos/internal/httpclient/models"
)

// GetSelfServiceVerificationRequestReader is a Reader for the GetSelfServiceVerificationRequest structure.
type GetSelfServiceVerificationRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSelfServiceVerificationRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSelfServiceVerificationRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSelfServiceVerificationRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSelfServiceVerificationRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSelfServiceVerificationRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSelfServiceVerificationRequestOK creates a GetSelfServiceVerificationRequestOK with default headers values
func NewGetSelfServiceVerificationRequestOK() *GetSelfServiceVerificationRequestOK {
	return &GetSelfServiceVerificationRequestOK{}
}

/*GetSelfServiceVerificationRequestOK handles this case with default header values.

verificationRequest
*/
type GetSelfServiceVerificationRequestOK struct {
	Payload *models.VerificationRequest
}

func (o *GetSelfServiceVerificationRequestOK) Error() string {
	return fmt.Sprintf("[GET /self-service/browser/flows/requests/verification][%d] getSelfServiceVerificationRequestOK  %+v", 200, o.Payload)
}

func (o *GetSelfServiceVerificationRequestOK) GetPayload() *models.VerificationRequest {
	return o.Payload
}

func (o *GetSelfServiceVerificationRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VerificationRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSelfServiceVerificationRequestForbidden creates a GetSelfServiceVerificationRequestForbidden with default headers values
func NewGetSelfServiceVerificationRequestForbidden() *GetSelfServiceVerificationRequestForbidden {
	return &GetSelfServiceVerificationRequestForbidden{}
}

/*GetSelfServiceVerificationRequestForbidden handles this case with default header values.

genericError
*/
type GetSelfServiceVerificationRequestForbidden struct {
	Payload *models.GenericError
}

func (o *GetSelfServiceVerificationRequestForbidden) Error() string {
	return fmt.Sprintf("[GET /self-service/browser/flows/requests/verification][%d] getSelfServiceVerificationRequestForbidden  %+v", 403, o.Payload)
}

func (o *GetSelfServiceVerificationRequestForbidden) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *GetSelfServiceVerificationRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSelfServiceVerificationRequestNotFound creates a GetSelfServiceVerificationRequestNotFound with default headers values
func NewGetSelfServiceVerificationRequestNotFound() *GetSelfServiceVerificationRequestNotFound {
	return &GetSelfServiceVerificationRequestNotFound{}
}

/*GetSelfServiceVerificationRequestNotFound handles this case with default header values.

genericError
*/
type GetSelfServiceVerificationRequestNotFound struct {
	Payload *models.GenericError
}

func (o *GetSelfServiceVerificationRequestNotFound) Error() string {
	return fmt.Sprintf("[GET /self-service/browser/flows/requests/verification][%d] getSelfServiceVerificationRequestNotFound  %+v", 404, o.Payload)
}

func (o *GetSelfServiceVerificationRequestNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *GetSelfServiceVerificationRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSelfServiceVerificationRequestInternalServerError creates a GetSelfServiceVerificationRequestInternalServerError with default headers values
func NewGetSelfServiceVerificationRequestInternalServerError() *GetSelfServiceVerificationRequestInternalServerError {
	return &GetSelfServiceVerificationRequestInternalServerError{}
}

/*GetSelfServiceVerificationRequestInternalServerError handles this case with default header values.

genericError
*/
type GetSelfServiceVerificationRequestInternalServerError struct {
	Payload *models.GenericError
}

func (o *GetSelfServiceVerificationRequestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /self-service/browser/flows/requests/verification][%d] getSelfServiceVerificationRequestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSelfServiceVerificationRequestInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *GetSelfServiceVerificationRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
