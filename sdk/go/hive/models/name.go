// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Name name
// swagger:model Name
type Name struct {

	// FamilyName: The family name of the User, or last name in most
	// Western languages (e.g., "Jensen" given the full name
	// "Ms. Barbara Jane Jensen, III").
	FamilyName string `json:"family_name,omitempty"`

	// Formatted: The full name, including all middle names, titles, and
	// suffixes as appropriate, formatted for display (e.g.,
	// "Ms. Barbara Jane Jensen, III").
	Formatted string `json:"formatted,omitempty"`

	// GivenName: The given name of the User, or first name in most
	// Western languages (e.g., "Barbara" given the full name
	// "Ms. Barbara Jane Jensen, III").
	GivenName string `json:"given_name,omitempty"`

	// HonorificPrefix: The honorific prefix(es) of the User, or title in
	// most Western languages (e.g., "Ms." given the full name
	// "Ms. Barbara Jane Jensen, III").
	HonorificPrefix string `json:"honorific_prefix,omitempty"`

	// HonorificSuffix: The honorific suffix(es) of the User, or suffix
	// in most Western languages (e.g., "III" given the full name
	// "Ms. Barbara Jane Jensen, III").
	HonorificSuffix string `json:"honorific_suffix,omitempty"`

	// MiddleName: The middle name(s) of the User (e.g., "Jane" given the
	// full name "Ms. Barbara Jane Jensen, III").
	MiddleName string `json:"middle_name,omitempty"`
}

// Validate validates this name
func (m *Name) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Name) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Name) UnmarshalBinary(b []byte) error {
	var res Name
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
