{
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Welcome to the ORY Kratos HTTP API documentation!",
    "title": "Ory Kratos",
    "version": "latest"
  },
  "basePath": "/",
  "paths": {
    "/health/alive": {
      "get": {
        "description": "This endpoint returns a 200 status code when the HTTP server is up running.\nThis status does currently not include checks whether the database connection is working.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Check alive status",
        "operationId": "isInstanceAlive",
        "responses": {
          "200": {
            "description": "healthStatus",
            "schema": {
              "$ref": "#/definitions/healthStatus"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "description": "This endpoint returns a 200 status code when the HTTP server is up running and the environment dependencies (e.g.\nthe database) are responsive as well.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Check readiness status",
        "operationId": "isInstanceReady",
        "responses": {
          "200": {
            "description": "healthStatus",
            "schema": {
              "$ref": "#/definitions/healthStatus"
            }
          },
          "503": {
            "description": "healthNotReadyStatus",
            "schema": {
              "$ref": "#/definitions/healthNotReadyStatus"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "description": "This endpoint returns the service version typically notated using semantic versioning.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "version"
        ],
        "summary": "Get service version",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "version",
            "schema": {
              "$ref": "#/definitions/version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CredentialsType": {
      "description": "and so on.",
      "type": "string",
      "title": "CredentialsType  represents several different credential types, like password credentials, passwordless credentials,",
      "x-go-package": "github.com/ory/kratos/identity"
    },
    "RawMessage": {
      "description": "It implements Marshaler and Unmarshaler and can\nbe used to delay JSON decoding or precompute a JSON encoding.",
      "type": "array",
      "title": "RawMessage is a raw encoded JSON value.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "encoding/json"
    },
    "genericError": {
      "description": "Error responses are sent when an error (e.g. unauthorized, bad request, ...) occurred.",
      "type": "object",
      "title": "Error response",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "description": "Name is the error name.",
          "type": "string",
          "x-go-name": "Name",
          "example": "The requested resource could not be found"
        },
        "error_code": {
          "description": "Code represents the error status code (404, 403, 401, ...).",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code",
          "example": 404
        },
        "error_debug": {
          "description": "Debug contains debug information. This is usually not available and has to be enabled.",
          "type": "string",
          "x-go-name": "Debug",
          "example": "The database adapter was unable to find the element"
        },
        "error_hint": {
          "description": "Hint contains further information on the nature of the error.",
          "type": "string",
          "x-go-name": "Hint",
          "example": "Object with RequestID 12345 does not exist"
        }
      },
      "x-go-package": "github.com/ory/kratos"
    },
    "healthNotReadyStatus": {
      "type": "object",
      "properties": {
        "errors": {
          "description": "Errors contains a list of errors that caused the not ready status.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Errors"
        }
      },
      "x-go-name": "swaggerNotReadyStatus",
      "x-go-package": "github.com/ory/kratos/vendor/github.com/ory/x/healthx"
    },
    "healthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Status always contains \"ok\".",
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-name": "swaggerHealthStatus",
      "x-go-package": "github.com/ory/kratos/vendor/github.com/ory/x/healthx"
    },
    "identity": {
      "description": "An identity can be a real human, a service, an IoT device - everything that\ncan be described as an \"actor\" in a system.",
      "type": "object",
      "title": "Identity represents a kratos identity",
      "properties": {
        "credentials": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/identityCredentials"
          },
          "x-go-name": "Credentials"
        },
        "id": {
          "description": "ID is a unique identifier chosen by you. It can be a URN (e.g. \"arn:aws:iam::123456789012\"),\na stringified integer (e.g. \"123456789012\"), a uuid (e.g. \"9f425a8d-7efc-4768-8f23-7647a74fdf13\"). It is up to you\nto pick a format you'd like. It is discouraged to use a personally identifiable value here, like the username\nor the email, as this field is immutable.",
          "type": "string",
          "x-go-name": "ID"
        },
        "traits": {
          "$ref": "#/definitions/RawMessage"
        },
        "traits_schema_url": {
          "type": "string",
          "x-go-name": "TraitsSchemaURL"
        }
      },
      "x-go-name": "Identity",
      "x-go-package": "github.com/ory/kratos/identity"
    },
    "identityCredentials": {
      "description": "Credentials represents a specific credential type",
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/RawMessage"
        },
        "id": {
          "$ref": "#/definitions/CredentialsType"
        },
        "identifiers": {
          "description": "Identifiers represents a list of unique identifiers this credential type matches.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Identifiers"
        }
      },
      "x-go-name": "Credentials",
      "x-go-package": "github.com/ory/kratos/identity"
    },
    "version": {
      "type": "object",
      "properties": {
        "version": {
          "description": "Version is the service's version.",
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-name": "swaggerVersion",
      "x-go-package": "github.com/ory/kratos/vendor/github.com/ory/x/healthx"
    }
  },
  "responses": {
    "emptyResponse": {
      "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
    }
  },
  "x-forwarded-proto": "string",
  "x-request-id": "string"
}