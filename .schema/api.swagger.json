{
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Welcome to the ORY Kratos HTTP API documentation!",
    "title": "Ory Kratos",
    "version": "latest"
  },
  "basePath": "/",
  "paths": {
    "/health/alive": {
      "get": {
        "description": "This endpoint returns a 200 status code when the HTTP server is up running.\nThis status does currently not include checks whether the database connection is working.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Check alive status",
        "operationId": "isInstanceAlive",
        "responses": {
          "200": {
            "description": "healthStatus",
            "schema": {
              "$ref": "#/definitions/healthStatus"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "description": "This endpoint returns a 200 status code when the HTTP server is up running and the environment dependencies (e.g.\nthe database) are responsive as well.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Check readiness status",
        "operationId": "isInstanceReady",
        "responses": {
          "200": {
            "description": "healthStatus",
            "schema": {
              "$ref": "#/definitions/healthStatus"
            }
          },
          "503": {
            "description": "healthNotReadyStatus",
            "schema": {
              "$ref": "#/definitions/healthNotReadyStatus"
            }
          }
        }
      }
    },
    "/identities": {
      "get": {
        "description": "Lists all identities. Does not support search at the moment.\n\nLearn how identities work in [ORY Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "admin"
        ],
        "summary": "List Identities",
        "operationId": "listIdentities",
        "parameters": [
          {
            "maximum": 500,
            "minimum": 1,
            "type": "integer",
            "format": "int64",
            "default": 100,
            "description": "Items per Page\n\nThis is the number of items per page.",
            "name": "per_page",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Pagination Page",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of identities.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Identity"
              }
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      },
      "post": {
        "description": "This endpoint creates an identity. It is NOT possible to set an identity's credentials (password, ...)\nusing this method! A way to achieve that will be introduced in the future.\n\nLearn how identities work in [ORY Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Create an Identity",
        "operationId": "createIdentity",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A single identity.",
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          },
          "400": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/identities/{id}": {
      "get": {
        "description": "Learn how identities work in [ORY Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Get an Identity",
        "operationId": "getIdentity",
        "parameters": [
          {
            "type": "string",
            "description": "ID must be set to the ID of identity you want to get",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A single identity.",
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          },
          "400": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      },
      "put": {
        "description": "This endpoint updates an identity. It is NOT possible to set an identity's credentials (password, ...)\nusing this method! A way to achieve that will be introduced in the future.\n\nThe full identity payload (except credentials) is expected. This endpoint does not support patching.\n\nLearn how identities work in [ORY Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Update an Identity",
        "operationId": "updateIdentity",
        "parameters": [
          {
            "type": "string",
            "description": "ID must be set to the ID of identity you want to update",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single identity.",
            "schema": {
              "$ref": "#/definitions/Identity"
            }
          },
          "400": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      },
      "delete": {
        "description": "Calling this endpoint irrecoverably and permanently deletes the identity given its ID. This action can not be undone.\nThis endpoint returns 204 when the identity was deleted or when the identity was not found, in which case it is\nassumed that is has been deleted already.\n\nLearn how identities work in [ORY Kratos' User And Identity Model Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Delete an Identity",
        "operationId": "deleteIdentity",
        "parameters": [
          {
            "type": "string",
            "description": "ID is the identity's ID.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/recovery/link": {
      "post": {
        "description": "This endpoint creates a recovery link which should be given to the user in order for them to recover\n(or activate) their account.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Create a Recovery Link",
        "operationId": "createRecoveryLink",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "identity_id"
              ],
              "properties": {
                "expires_in": {
                  "description": "Link Expires In\n\nThe recovery link will expire at that point in time. Defaults to the configuration value of\n`selfservice.flows.recovery.request_lifespan`.",
                  "type": "string",
                  "pattern": "^[0-9]+(ns|us|ms|s|m|h)$"
                },
                "identity_id": {
                  "$ref": "#/definitions/UUID"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "createRecoveryLinkResponse",
            "schema": {
              "$ref": "#/definitions/createRecoveryLinkResponse"
            }
          },
          "400": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/schemas/{id}": {
      "get": {
        "description": "Get a traits schema definition",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "common",
          "public",
          "admin"
        ],
        "operationId": "getSchema",
        "parameters": [
          {
            "type": "string",
            "description": "ID must be set to the ID of schema you want to get",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The raw identity traits schema",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/logout": {
      "get": {
        "description": "This endpoint initializes a logout flow.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works\nwith browsers (Chrome, Firefox, ...).\n\nOn successful logout, the browser will be redirected (HTTP 302 Found) to `urls.default_return_to`.\n\nMore information can be found at [ORY Kratos User Logout Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-logout).",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Initialize Browser-Based Logout User Flow",
        "operationId": "initializeSelfServiceBrowserLogoutFlow",
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/recovery": {
      "get": {
        "description": "This endpoint initializes a browser-based account recovery flow. Once initialized, the browser will be redirected to\n`selfservice.flows.recovery.ui_url` with the request ID set as a query parameter. If a valid user session exists, the request\nis aborted.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works\nwith browsers (Chrome, Firefox, ...).\n\nMore information can be found at [ORY Kratos Account Recovery Documentation](../self-service/flows/password-reset-account-recovery).",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Initialize browser-based account recovery flow",
        "operationId": "initializeSelfServiceRecoveryFlow",
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/recovery/link": {
      "post": {
        "description": "\u003e This endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...) and HTML Forms.\n\nMore information can be found at [ORY Kratos Account Recovery Documentation](../self-service/flows/password-reset-account-recovery).",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Complete the browser-based recovery flow using a recovery link",
        "operationId": "completeSelfServiceBrowserRecoveryLinkStrategyFlow",
        "parameters": [
          {
            "description": "Email to Recover\n\nNeeds to be set when initiating the flow. If the email is a registered\nrecovery email, a recovery link will be sent. If the email is not known,\na email with details on what happened will be sent instead.",
            "name": "email",
            "in": "body",
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "description": "Recovery Token\n\nThe recovery token which completes the recovery request. If the token\nis invalid (e.g. expired) an error will be shown to the end-user.",
            "name": "token",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Recovery Request ID",
            "name": "request",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/registration": {
      "get": {
        "description": "This endpoint initializes a browser-based user registration flow. Once initialized, the browser will be redirected to\n`selfservice.flows.registration.ui_url` with the request ID set as a query parameter. If a valid user session exists already, the browser will be\nredirected to `urls.default_redirect_url`.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works\nwith browsers (Chrome, Firefox, ...).\n\nMore information can be found at [ORY Kratos User Login and User Registration Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration).",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Initialize browser-based registration user flow",
        "operationId": "initializeSelfServiceBrowserRegistrationFlow",
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/registration/strategies/oidc/settings/connections": {
      "post": {
        "description": "This endpoint completes a browser-based settings flow. This is usually achieved by POSTing data to this\nendpoint.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...) and HTML Forms.\n\nMore information can be found at [ORY Kratos User Settings \u0026 Profile Management Documentation](../self-service/flows/user-settings).",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Complete the browser-based settings flow for the OpenID Connect strategy",
        "operationId": "completeSelfServiceBrowserSettingsOIDCSettingsFlow",
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/requests/recovery": {
      "get": {
        "description": "When accessing this endpoint through ORY Kratos' Public API, ensure that cookies are set as they are required\nfor checking the auth session. To prevent scanning attacks, the public endpoint does not return 404 status codes\nbut instead 403 or 500.\n\nMore information can be found at [ORY Kratos Account Recovery Documentation](../self-service/flows/password-reset-account-recovery).",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "common",
          "public",
          "admin"
        ],
        "summary": "Get the request context of browser-based recovery flows",
        "operationId": "getSelfServiceBrowserRecoveryRequest",
        "parameters": [
          {
            "type": "string",
            "description": "Request is the Login Request ID\n\nThe value for this parameter comes from `request` URL Query parameter sent to your\napplication (e.g. `/recover?request=abcde`).",
            "name": "request",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "recoveryRequest",
            "schema": {
              "$ref": "#/definitions/recoveryRequest"
            }
          },
          "403": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "410": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/requests/registration": {
      "get": {
        "description": "This endpoint returns a registration request's context with, for example, error details and\nother information.\n\nWhen accessing this endpoint through ORY Kratos' Public API, ensure that cookies are set as they are required for CSRF to work. To prevent\ntoken scanning attacks, the public endpoint does not return 404 status codes.\n\nMore information can be found at [ORY Kratos User Login and User Registration Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration).",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "common",
          "public",
          "admin"
        ],
        "summary": "Get the request context of browser-based registration user flows",
        "operationId": "getSelfServiceBrowserRegistrationRequest",
        "parameters": [
          {
            "type": "string",
            "description": "Request is the Registration Request ID\n\nThe value for this parameter comes from `request` URL Query parameter sent to your\napplication (e.g. `/registration?request=abcde`).",
            "name": "request",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "registrationRequest",
            "schema": {
              "$ref": "#/definitions/registrationRequest"
            }
          },
          "403": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "410": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/requests/settings": {
      "get": {
        "description": "When accessing this endpoint through ORY Kratos' Public API, ensure that cookies are set as they are required\nfor checking the auth session. To prevent scanning attacks, the public endpoint does not return 404 status codes\nbut instead 403 or 500.\n\nMore information can be found at [ORY Kratos User Settings \u0026 Profile Management Documentation](../self-service/flows/user-settings).",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "common",
          "public",
          "admin"
        ],
        "summary": "Get the request context of browser-based settings flows",
        "operationId": "getSelfServiceBrowserSettingsRequest",
        "parameters": [
          {
            "type": "string",
            "description": "Request is the Login Request ID\n\nThe value for this parameter comes from `request` URL Query parameter sent to your\napplication (e.g. `/settingss?request=abcde`).",
            "name": "request",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "settingsRequest",
            "schema": {
              "$ref": "#/definitions/settingsRequest"
            }
          },
          "403": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "410": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/requests/verification": {
      "get": {
        "description": "When accessing this endpoint through ORY Kratos' Public API, ensure that cookies are set as they are required\nfor checking the auth session. To prevent scanning attacks, the public endpoint does not return 404 status codes\nbut instead 403 or 500.\n\nMore information can be found at [ORY Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation).",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "common",
          "public",
          "admin"
        ],
        "summary": "Get the request context of browser-based verification flows",
        "operationId": "getSelfServiceVerificationRequest",
        "parameters": [
          {
            "type": "string",
            "description": "Request is the Request ID\n\nThe value for this parameter comes from `request` URL Query parameter sent to your\napplication (e.g. `/verify?request=abcde`).",
            "name": "request",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "verificationRequest",
            "schema": {
              "$ref": "#/definitions/verificationRequest"
            }
          },
          "403": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/settings": {
      "get": {
        "description": "This endpoint initializes a browser-based settings flow. Once initialized, the browser will be redirected to\n`selfservice.flows.settings.ui_url` with the request ID set as a query parameter. If no valid user session exists, a login\nflow will be initialized.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works\nwith browsers (Chrome, Firefox, ...).\n\nMore information can be found at [ORY Kratos User Settings \u0026 Profile Management Documentation](../self-service/flows/user-settings).",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Initialize browser-based settings flow",
        "operationId": "initializeSelfServiceSettingsFlow",
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/settings/strategies/password": {
      "post": {
        "description": "This endpoint completes a browser-based settings flow. This is usually achieved by POSTing data to this\nendpoint.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...) and HTML Forms.\n\nMore information can be found at [ORY Kratos User Settings \u0026 Profile Management Documentation](../self-service/flows/user-settings).",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Complete the browser-based settings flow for the password strategy",
        "operationId": "completeSelfServiceBrowserSettingsPasswordStrategyFlow",
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/settings/strategies/profile": {
      "post": {
        "description": "This endpoint completes a browser-based settings flow. This is usually achieved by POSTing data to this\nendpoint.\n\nIf the provided profile data is valid against the Identity's Traits JSON Schema, the data will be updated and\nthe browser redirected to `url.settings_ui` for further steps.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...) and HTML Forms.\n\nMore information can be found at [ORY Kratos User Settings \u0026 Profile Management Documentation](../self-service/flows/user-settings).",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Complete the browser-based settings flow for profile data",
        "operationId": "completeSelfServiceBrowserSettingsProfileStrategyFlow",
        "parameters": [
          {
            "type": "string",
            "description": "Request is the request ID.",
            "name": "request",
            "in": "query",
            "required": true
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/completeSelfServiceBrowserSettingsStrategyProfileFlowPayload"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/verification/init/{via}": {
      "get": {
        "description": "This endpoint initializes a browser-based verification flow. Once initialized, the browser will be redirected to\n`selfservice.flows.settings.ui_url` with the request ID set as a query parameter. If no valid user session exists, a login\nflow will be initialized.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works\nwith browsers (Chrome, Firefox, ...).\n\nMore information can be found at [ORY Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation).",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Initialize browser-based verification flow",
        "operationId": "initializeSelfServiceBrowserVerificationFlow",
        "parameters": [
          {
            "type": "string",
            "description": "What to verify\n\nCurrently only \"email\" is supported.",
            "name": "via",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/verification/{via}/complete": {
      "post": {
        "description": "This endpoint completes a browser-based verification flow. This is usually achieved by POSTing data to this\nendpoint.\n\nIf the provided data is valid against the Identity's Traits JSON Schema, the data will be updated and\nthe browser redirected to `url.settings_ui` for further steps.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...) and HTML Forms.\n\nMore information can be found at [ORY Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation).",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Complete the browser-based verification flows",
        "operationId": "completeSelfServiceBrowserVerificationFlow",
        "parameters": [
          {
            "type": "string",
            "description": "Request is the Request ID\n\nThe value for this parameter comes from `request` URL Query parameter sent to your\napplication (e.g. `/verify?request=abcde`).",
            "name": "request",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "What to verify\n\nCurrently only \"email\" is supported.",
            "name": "via",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/browser/flows/verification/{via}/confirm/{code}": {
      "get": {
        "description": "This endpoint completes a browser-based verification flow.\n\n\u003e This endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...) and HTML Forms.\n\nMore information can be found at [ORY Kratos Email and Phone Verification Documentation](https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation).",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Complete the browser-based verification flows",
        "operationId": "selfServiceBrowserVerify",
        "parameters": [
          {
            "type": "string",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "What to verify\n\nCurrently only \"email\" is supported.",
            "name": "via",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/errors": {
      "get": {
        "description": "This endpoint returns the error associated with a user-facing self service errors.\n\nWhen accessing this endpoint through ORY Kratos' Public API, ensure that cookies are set as they are required for CSRF to work. To prevent\ntoken scanning attacks, the public endpoint does not return 404 status codes.\n\nThis endpoint supports stub values to help you implement the error UI:\n\n`?error=stub:500` - returns a stub 500 (Internal Server Error) error.\n\nMore information can be found at [ORY Kratos User User Facing Error Documentation](https://www.ory.sh/docs/kratos/self-service/flows/user-facing-errors).",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "common",
          "public",
          "admin"
        ],
        "summary": "Get user-facing self-service errors",
        "operationId": "getSelfServiceError",
        "parameters": [
          {
            "type": "string",
            "description": "Error is the container's ID",
            "name": "error",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User-facing error response",
            "schema": {
              "$ref": "#/definitions/errorContainer"
            }
          },
          "403": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/login/api": {
      "get": {
        "description": "This endpoint initiates a login flow for API clients such as mobile devices, smart TVs, and so on.\n\nIf a valid provided session cookie or session token is provided, a 400 Bad Request error\nwill be returned unless the URL query parameter `?refresh=true` is set.\n\nTo fetch an existing login flow call `/self-service/login/flows?flow=\u003cflow_id\u003e`.\n\n:::note\n\nThis endpoint is NOT INTENDED for browser applications (Chrome, Firefox, ...). We recommend using this endpoint\nfor server-side browser applications and single page apps (SPA).\n\n:::\n\nMore information can be found at [ORY Kratos User Login and User Registration Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration).",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "common",
          "public",
          "admin"
        ],
        "summary": "Initialize Login Flow for API clients",
        "operationId": "initializeSelfServiceLoginViaAPIFlow",
        "parameters": [
          {
            "type": "boolean",
            "description": "Refresh a login session\n\nIf set to true, this will refresh an existing login session by\nasking the user to sign in again. This will reset the\nauthenticated_at time of the session.",
            "name": "refresh",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "loginFlow",
            "schema": {
              "$ref": "#/definitions/loginFlow"
            }
          },
          "400": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/login/browser": {
      "get": {
        "description": "This endpoint initializes a browser-based user login flow. Once initialized, the browser will be redirected to\n`selfservice.flows.login.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session\nexists already, the browser will be redirected to `urls.default_redirect_url` unless the query parameter\n`?refresh=true` was set.\n\n:::note\n\nThis endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...).\n\n:::\n\nMore information can be found at [ORY Kratos User Login and User Registration Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration).",
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Initialize Login Flow for browsers",
        "operationId": "initializeSelfServiceLoginViaBrowserFlow",
        "responses": {
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/login/flows": {
      "get": {
        "description": "This endpoint returns a login flow's context with, for example, error details and other information.\n\nMore information can be found at [ORY Kratos User Login and User Registration Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration).",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "common",
          "public",
          "admin"
        ],
        "summary": "Get information about a login flow",
        "operationId": "getSelfServiceLoginFlow",
        "parameters": [
          {
            "type": "string",
            "description": "The Login Flow ID\n\nThe value for this parameter comes from `flow` URL Query parameter sent to your\napplication (e.g. `/login?flow=abcde`).",
            "name": "id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "loginFlow",
            "schema": {
              "$ref": "#/definitions/loginFlow"
            }
          },
          "403": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "404": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "410": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/self-service/login/methods/password": {
      "get": {
        "description": "Use this endpoint to complete a login flow by sending an identity's identifier and password. This endpoint\nbehaves differently for API and browser flows.\n\nAPI flows expect `application/json` to be sent in the body and responds with\nHTTP 200 and a application/json body with the session token on success;\nHTTP 400 on form validation errors.\n\nBrowser flows expect `application/x-www-form-urlencoded` to be sent in the body and responds with\na HTTP 302 redirect to the post/after login URL or the `return_to` value if it was set and if the login succeeded;\na HTTP 302 redirect to the login UI URL with the flow ID containing the validation errors otherwise.\n\nMore information can be found at [ORY Kratos User Login and User Registration Documentation](https://www.ory.sh/docs/next/kratos/self-service/flows/user-login-user-registration).",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Complete Login Flow with Username/Email Password Method",
        "operationId": "completeSelfServiceLoginFlowWithPasswordMethod",
        "parameters": [
          {
            "type": "string",
            "name": "password",
            "in": "query"
          },
          {
            "type": "string",
            "name": "identifier",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The Flow ID",
            "name": "flow",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "sessionTokenContainer",
            "schema": {
              "$ref": "#/definitions/sessionTokenContainer"
            }
          },
          "302": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "400": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/sessions": {
      "delete": {
        "description": "Use this endpoint to revoke a session using its token. This endpoint is particularly useful for API clients\nsuch as mobile apps to log the user out of the system and invalidate the session.\n\nThis endpoint does not remove any HTTP Cookies - use the Self-Service Logout Flow instead.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Revoke and Invalidate a Session",
        "operationId": "revokeSession",
        "parameters": [
          {
            "description": "The Session Token\n\nInvalidate this session token.",
            "name": "session_token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty responses are sent when, for example, resources are deleted. The HTTP status code for empty responses is\ntypically 201."
          },
          "400": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/sessions/whoami": {
      "get": {
        "description": "Uses the HTTP Headers in the GET request to determine (e.g. by using checking the cookies) who is authenticated.\nReturns a session object in the body or 401 if the credentials are invalid or no credentials were sent.\nAdditionally when the request it successful it adds the user ID to the 'X-Kratos-Authenticated-Identity-Id' header in the response.\n\nThis endpoint is useful for reverse proxies and API Gateways.",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "tags": [
          "public"
        ],
        "summary": "Check who the current HTTP session belongs to",
        "operationId": "whoami",
        "responses": {
          "200": {
            "description": "session",
            "schema": {
              "$ref": "#/definitions/session"
            }
          },
          "403": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          },
          "500": {
            "description": "genericError",
            "schema": {
              "$ref": "#/definitions/genericError"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "description": "This endpoint returns the service version typically notated using semantic versioning.\n\nIf the service supports TLS Edge Termination, this endpoint does not require the\n`X-Forwarded-Proto` header to be set.\n\nBe aware that if you are running multiple nodes of this service, the health status will never\nrefer to the cluster state, only to a single instance.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "version"
        ],
        "summary": "Get service version",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "version",
            "schema": {
              "$ref": "#/definitions/version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CredentialsType": {
      "description": "and so on.",
      "type": "string",
      "title": "CredentialsType  represents several different credential types, like password credentials, passwordless credentials,"
    },
    "ID": {
      "type": "integer",
      "format": "int64"
    },
    "Identity": {
      "type": "object",
      "required": [
        "id",
        "schema_id",
        "traits"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/UUID"
        },
        "recovery_addresses": {
          "description": "RecoveryAddresses contains all the addresses that can be used to recover an identity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryAddress"
          }
        },
        "schema_id": {
          "description": "SchemaID is the ID of the JSON Schema to be used for validating the identity's traits.",
          "type": "string"
        },
        "schema_url": {
          "description": "SchemaURL is the URL of the endpoint where the identity's traits schema can be fetched from.\n\nformat: url",
          "type": "string"
        },
        "traits": {
          "$ref": "#/definitions/Traits"
        },
        "verifiable_addresses": {
          "description": "VerifiableAddresses contains all the addresses that can be verified by the user.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiableAddress"
          }
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "context": {
          "type": "object"
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        }
      }
    },
    "Messages": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Message"
      }
    },
    "ProviderCredentialsConfig": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "RecoveryAddress": {
      "type": "object",
      "required": [
        "id",
        "value",
        "via"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/UUID"
        },
        "value": {
          "type": "string"
        },
        "via": {
          "$ref": "#/definitions/RecoveryAddressType"
        }
      }
    },
    "RecoveryAddressType": {
      "type": "string"
    },
    "RequestMethodConfig": {
      "type": "object",
      "required": [
        "action",
        "method",
        "fields"
      ],
      "properties": {
        "action": {
          "description": "Action should be used as the form action URL `\u003cform action=\"{{ .Action }}\" method=\"post\"\u003e`.",
          "type": "string"
        },
        "fields": {
          "$ref": "#/definitions/formFields"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "method": {
          "description": "Method is the form method (e.g. POST)",
          "type": "string"
        }
      }
    },
    "State": {
      "type": "string"
    },
    "Traits": {
      "type": "object"
    },
    "Type": {
      "description": "The flow type can either be `api` or `browser`.",
      "type": "string",
      "title": "Type is the flow type."
    },
    "UUID": {
      "type": "string",
      "format": "uuid4"
    },
    "VerifiableAddress": {
      "type": "object",
      "required": [
        "id",
        "value",
        "verified",
        "via",
        "expires_at"
      ],
      "properties": {
        "expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "$ref": "#/definitions/UUID"
        },
        "value": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        },
        "verified_at": {
          "type": "string",
          "format": "date-time"
        },
        "via": {
          "$ref": "#/definitions/VerifiableAddressType"
        }
      }
    },
    "VerifiableAddressType": {
      "type": "string"
    },
    "completeSelfServiceBrowserSettingsStrategyProfileFlowPayload": {
      "type": "object",
      "required": [
        "traits"
      ],
      "properties": {
        "request_id": {
          "description": "RequestID is request ID.\n\nin: query",
          "type": "string"
        },
        "traits": {
          "description": "Traits contains all of the identity's traits.\n\ntype: string\nformat: binary",
          "type": "object"
        }
      }
    },
    "createRecoveryLinkResponse": {
      "type": "object",
      "required": [
        "recovery_link"
      ],
      "properties": {
        "expires_at": {
          "description": "Recovery Link Expires At\n\nThe timestamp when the recovery link expires.",
          "type": "string",
          "format": "date-time"
        },
        "recovery_link": {
          "description": "Recovery Link\n\nThis link can be used to recover the account.",
          "type": "string"
        }
      }
    },
    "errorContainer": {
      "type": "object",
      "required": [
        "id",
        "errors"
      ],
      "properties": {
        "errors": {
          "description": "Errors in the container",
          "type": "object"
        },
        "id": {
          "$ref": "#/definitions/UUID"
        }
      }
    },
    "form": {
      "description": "HTMLForm represents a HTML Form. The container can work with both HTTP Form and JSON requests",
      "type": "object",
      "required": [
        "action",
        "method",
        "fields"
      ],
      "properties": {
        "action": {
          "description": "Action should be used as the form action URL `\u003cform action=\"{{ .Action }}\" method=\"post\"\u003e`.",
          "type": "string"
        },
        "fields": {
          "$ref": "#/definitions/formFields"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "method": {
          "description": "Method is the form method (e.g. POST)",
          "type": "string"
        }
      }
    },
    "formField": {
      "description": "Field represents a HTML Form Field",
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "disabled": {
          "description": "Disabled is the equivalent of `\u003cinput {{if .Disabled}}disabled{{end}}\"\u003e`",
          "type": "boolean"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "name": {
          "description": "Name is the equivalent of `\u003cinput name=\"{{.Name}}\"\u003e`",
          "type": "string"
        },
        "pattern": {
          "description": "Pattern is the equivalent of `\u003cinput pattern=\"{{.Pattern}}\"\u003e`",
          "type": "string"
        },
        "required": {
          "description": "Required is the equivalent of `\u003cinput required=\"{{.Required}}\"\u003e`",
          "type": "boolean"
        },
        "type": {
          "description": "Type is the equivalent of `\u003cinput type=\"{{.Type}}\"\u003e`",
          "type": "string"
        },
        "value": {
          "description": "Value is the equivalent of `\u003cinput value=\"{{.Value}}\"\u003e`",
          "type": "object"
        }
      }
    },
    "formFields": {
      "description": "Fields contains multiple fields",
      "type": "array",
      "items": {
        "$ref": "#/definitions/formField"
      }
    },
    "genericError": {
      "description": "Error responses are sent when an error (e.g. unauthorized, bad request, ...) occurred.",
      "type": "object",
      "title": "Error response",
      "properties": {
        "error": {
          "$ref": "#/definitions/genericErrorPayload"
        }
      }
    },
    "genericErrorPayload": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code represents the error status code (404, 403, 401, ...).",
          "type": "integer",
          "format": "int64",
          "example": 404
        },
        "debug": {
          "description": "Debug contains debug information. This is usually not available and has to be enabled.",
          "type": "string",
          "example": "The database adapter was unable to find the element"
        },
        "details": {
          "type": "object",
          "additionalProperties": true
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "request": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "healthNotReadyStatus": {
      "type": "object",
      "properties": {
        "errors": {
          "description": "Errors contains a list of errors that caused the not ready status.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "healthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Status always contains \"ok\".",
          "type": "string"
        }
      }
    },
    "loginFlow": {
      "description": "This object represents a login flow. A login flow is initiated at the \"Initiate Login API / Browser Flow\"\nendpoint by a client.\n\nOnce a login flow is completed successfully, a session cookie or session token will be issued.",
      "type": "object",
      "title": "Login Flow",
      "required": [
        "id",
        "expires_at",
        "issued_at",
        "request_url",
        "methods"
      ],
      "properties": {
        "active": {
          "$ref": "#/definitions/CredentialsType"
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,\na new flow has to be initiated.",
          "type": "string",
          "format": "date-time"
        },
        "forced": {
          "description": "Forced stores whether this login flow should enforce re-authentication.",
          "type": "boolean"
        },
        "id": {
          "$ref": "#/definitions/UUID"
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the flow started.",
          "type": "string",
          "format": "date-time"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "methods": {
          "description": "List of login methods\n\nThis is the list of available login methods with their required form fields, such as `identifier` and `password`\nfor the password login method. This will also contain error messages such as \"password can not be empty\".",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/loginFlowMethod"
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from ORY Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        }
      }
    },
    "loginFlowMethod": {
      "type": "object",
      "required": [
        "method",
        "config"
      ],
      "properties": {
        "config": {
          "$ref": "#/definitions/loginFlowMethodConfig"
        },
        "method": {
          "$ref": "#/definitions/CredentialsType"
        }
      }
    },
    "loginFlowMethodConfig": {
      "type": "object",
      "required": [
        "action",
        "method",
        "fields"
      ],
      "properties": {
        "action": {
          "description": "Action should be used as the form action URL `\u003cform action=\"{{ .Action }}\" method=\"post\"\u003e`.",
          "type": "string"
        },
        "fields": {
          "$ref": "#/definitions/formFields"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "method": {
          "description": "Method is the form method (e.g. POST)",
          "type": "string"
        },
        "providers": {
          "description": "Providers is set for the \"oidc\" flow method.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/formField"
          }
        }
      }
    },
    "recoveryRequest": {
      "description": "This request is used when an identity wants to recover their account.\n\nWe recommend reading the [Account Recovery Documentation](../self-service/flows/password-reset-account-recovery)",
      "type": "object",
      "title": "Request presents a recovery request",
      "required": [
        "id",
        "expires_at",
        "issued_at",
        "request_url",
        "methods",
        "state"
      ],
      "properties": {
        "active": {
          "description": "Active, if set, contains the registration method that is being used. It is initially\nnot set.",
          "type": "string"
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the setting,\na new request has to be initiated.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "$ref": "#/definitions/UUID"
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the request occurred.",
          "type": "string",
          "format": "date-time"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "methods": {
          "description": "Methods contains context for all account recovery methods. If a registration request has been\nprocessed, but for example the password is incorrect, this will contain error messages.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/recoveryRequestMethod"
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from ORY Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/State"
        }
      }
    },
    "recoveryRequestMethod": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/RequestMethodConfig"
        },
        "method": {
          "description": "Method contains the request credentials type.",
          "type": "string"
        }
      }
    },
    "registrationRequest": {
      "type": "object",
      "required": [
        "id",
        "expires_at",
        "issued_at",
        "request_url",
        "methods"
      ],
      "properties": {
        "active": {
          "$ref": "#/definitions/CredentialsType"
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the request expires. If the user still wishes to log in,\na new request has to be initiated.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "$ref": "#/definitions/UUID"
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the request occurred.",
          "type": "string",
          "format": "date-time"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "methods": {
          "description": "Methods contains context for all enabled registration methods. If a registration request has been\nprocessed, but for example the password is incorrect, this will contain error messages.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/registrationRequestMethod"
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from ORY Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
          "type": "string"
        }
      }
    },
    "registrationRequestMethod": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/registrationRequestMethodConfig"
        },
        "method": {
          "$ref": "#/definitions/CredentialsType"
        }
      }
    },
    "registrationRequestMethodConfig": {
      "type": "object",
      "required": [
        "action",
        "method",
        "fields"
      ],
      "properties": {
        "action": {
          "description": "Action should be used as the form action URL `\u003cform action=\"{{ .Action }}\" method=\"post\"\u003e`.",
          "type": "string"
        },
        "fields": {
          "$ref": "#/definitions/formFields"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "method": {
          "description": "Method is the form method (e.g. POST)",
          "type": "string"
        },
        "providers": {
          "description": "Providers is set for the \"oidc\" request method.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/formField"
          }
        }
      }
    },
    "session": {
      "type": "object",
      "required": [
        "sid",
        "expires_at",
        "authenticated_at",
        "issued_at",
        "identity"
      ],
      "properties": {
        "active": {
          "type": "boolean"
        },
        "authenticated_at": {
          "type": "string",
          "format": "date-time"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time"
        },
        "identity": {
          "$ref": "#/definitions/Identity"
        },
        "issued_at": {
          "type": "string",
          "format": "date-time"
        },
        "sid": {
          "$ref": "#/definitions/UUID"
        }
      }
    },
    "sessionTokenContainer": {
      "description": "Contains the Session and Session Token for API Based Authentication",
      "type": "object",
      "required": [
        "session_token",
        "session"
      ],
      "properties": {
        "session": {
          "$ref": "#/definitions/session"
        },
        "session_token": {
          "description": "The Session Token\n\nA session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization\nHeader:\n\nAuthorization: bearer \u003csession-token\u003e\n\nThe session token is only issued for API flows, not for Browser flows!",
          "type": "string"
        }
      }
    },
    "settingsRequest": {
      "description": "This request is used when an identity wants to update settings\n(e.g. profile data, passwords, ...) in a selfservice manner.\n\nWe recommend reading the [User Settings Documentation](../self-service/flows/user-settings)",
      "type": "object",
      "title": "Request presents a settings request",
      "required": [
        "id",
        "expires_at",
        "issued_at",
        "request_url",
        "methods",
        "identity",
        "state"
      ],
      "properties": {
        "active": {
          "description": "Active, if set, contains the registration method that is being used. It is initially\nnot set.",
          "type": "string"
        },
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the setting,\na new request has to be initiated.",
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "$ref": "#/definitions/UUID"
        },
        "identity": {
          "$ref": "#/definitions/Identity"
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the request occurred.",
          "type": "string",
          "format": "date-time"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "methods": {
          "description": "Methods contains context for all enabled registration methods. If a registration request has been\nprocessed, but for example the password is incorrect, this will contain error messages.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/settingsRequestMethod"
          }
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from ORY Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/State"
        }
      }
    },
    "settingsRequestMethod": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/RequestMethodConfig"
        },
        "method": {
          "description": "Method contains the request credentials type.",
          "type": "string"
        }
      }
    },
    "verificationRequest": {
      "description": "This request is used when an identity wants to verify an out-of-band communication\nchannel such as an email address or a phone number.\n\nFor more information head over to: https://www.ory.sh/docs/kratos/selfservice/flows/verify-email-account-activation",
      "type": "object",
      "title": "Request presents a verification request",
      "properties": {
        "expires_at": {
          "description": "ExpiresAt is the time (UTC) when the request expires. If the user still wishes to verify the address,\na new request has to be initiated.",
          "type": "string",
          "format": "date-time"
        },
        "form": {
          "$ref": "#/definitions/form"
        },
        "id": {
          "$ref": "#/definitions/UUID"
        },
        "issued_at": {
          "description": "IssuedAt is the time (UTC) when the request occurred.",
          "type": "string",
          "format": "date-time"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "request_url": {
          "description": "RequestURL is the initial URL that was requested from ORY Kratos. It can be used\nto forward information contained in the URL's path or query for example.",
          "type": "string"
        },
        "success": {
          "description": "Success, if true, implies that the request was completed successfully.",
          "type": "boolean"
        },
        "via": {
          "$ref": "#/definitions/VerifiableAddressType"
        }
      }
    },
    "version": {
      "type": "object",
      "properties": {
        "version": {
          "description": "Version is the service's version.",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "sessionToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "x-forwarded-proto": "string",
  "x-request-id": "string"
}